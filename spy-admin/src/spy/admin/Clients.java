/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spy.admin;

import database.Database;
import java.io.BufferedReader;
import java.net.*;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author root
 */
public class Clients extends javax.swing.JPanel {
    Database db;
    List<Socket> clientSockets;
    /**
     * Creates new form NewJPanel
     */
    public Clients(List clientSockets) {
        
        this.clientSockets=clientSockets;
        
        try {
            db=new Database();
        } catch (SQLException ex) {
            Logger.getLogger(Clients.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        day3 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        String[] columnNames = {"ID","Date", "Client Name", "Department", "PCNo", "LoggedIn", "LoggedOut"};
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        day = new javax.swing.JComboBox<>();
        month = new javax.swing.JComboBox<>();
        year = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        dept = new javax.swing.JComboBox<>();
        export = new javax.swing.JButton();
        minstart = new javax.swing.JComboBox<>();
        hrstart = new javax.swing.JComboBox<>();
        start = new javax.swing.JComboBox<>();
        hrend = new javax.swing.JComboBox<>();
        minend = new javax.swing.JComboBox<>();
        end = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        export1 = new javax.swing.JButton();

        day3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        day3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day3ActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Search by date range:");

        setBackground(new java.awt.Color(242, 250, 240));
        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(169, 182, 227));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Client LIst");

        DefaultTableModel model=new javax.swing.table.DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        jTable1.setModel(model);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        Connection con = null;
        PreparedStatement pst;
        ResultSet rs;
        try{

            //MAKE SURE YOU KEEP THE mysql_connector.jar file in java/lib folder
            //ALSO SET THE CLASSPATH

            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/spyware","root","raut123");
            System.out.println("connetion success.....");

        }
        catch (Exception e)
        {
            System.out.println("exception : "+e);
        }

        try {
            pst=con.prepareStatement("select * from client_logs order by id desc");

            rs=pst.executeQuery();

            while(rs.next())
            {
                int idd=rs.getInt("id");
                String name=rs.getString("name");
                String department=rs.getString("department");
                String pcno=rs.getString("pcno");
                String empid=rs.getString("empid");
                String LoggedIn=rs.getString("login_datetime");
                String LoggedOut=rs.getString("logout_datetime");

                String datee=db.dateformat(LoggedIn,"yyyy-MM-dd HH:mm:ss","dd-MM-yyyy");
                System.out.println(datee);
                String LoggedIntime=db.dateformat(LoggedIn,"yyyy-MM-dd HH:mm:ss","hh:mm aa");
                String LoggedOuttime="";
                if(LoggedOut==null){

                }else{
                    LoggedOuttime=db.dateformat(LoggedOut,"yyyy-MM-dd HH:mm:ss","hh:mm aa");
                }
                System.out.println(datee);

                model.addRow(new Object[]{empid,datee,name,department,pcno,LoggedIntime,LoggedOuttime});

            }

        } catch (Exception e) {
            // TODO Auto-generated catch block
            System.out.println("error while validating"+e);

        }

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search by date range");

        day.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayActionPerformed(evt);
            }
        });

        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });

        year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0000", "2020", "2021", "2022", "2023", "2024", "2025" }));

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HR", "Development", "Management", "Support", "QA" }));
        dept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptActionPerformed(evt);
            }
        });

        export.setText("Export");
        export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportActionPerformed(evt);
            }
        });

        minstart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" }));
        minstart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minstartActionPerformed(evt);
            }
        });

        hrstart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " " }));
        hrstart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrstartActionPerformed(evt);
            }
        });

        start.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        hrend.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " " }));
        hrend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrendActionPerformed(evt);
            }
        });

        minend.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" }));
        minend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minendActionPerformed(evt);
            }
        });

        end.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));
        end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Search by time range");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Search by department");

        export1.setText("Refresh");
        export1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                export1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dept, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addComponent(hrstart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minstart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hrend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(end, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(223, 223, 223)
                                .addComponent(export, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(export1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minstart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hrstart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hrend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(end, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(export)
                    .addComponent(export1))
                .addGap(48, 48, 48))
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        JTable target = (JTable)evt.getSource();
        int row = target.getSelectedRow(); // select a row
        int column = 0;
        String id=(String)jTable1.getValueAt(row, column);

//        Home h=new Home();
//        h.openstuddetails(id);

            this.removeAll();
          this.repaint();
          this.revalidate();
          this.add(new ClientDetails(id,clientSockets));
          this.repaint();
          this.revalidate();
          
    }//GEN-LAST:event_jTable1MouseClicked

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
            //
            String d=(String) day.getSelectedItem();
            String m=(String) month.getSelectedItem();
            String y=(String) year.getSelectedItem();
            String deptd=(String) dept.getSelectedItem();
            // search by time
            String hs=(String) hrstart.getSelectedItem();
            String ms=(String) minstart.getSelectedItem();
            String s=(String)  start.getSelectedItem();
            String he=(String) hrend.getSelectedItem();
            String me=(String) minend.getSelectedItem();
            String e=(String)  end.getSelectedItem();
            
            
            String sdate="";
            String edate="";
            if(d.equals("00") || m.equals("00") || y.equals("0000")){
                
            }else
            {
              sdate=y+"-"+m+"-"+d+" "+hs+":"+ms+" "+s;
              edate=y+"-"+m+"-"+d+" "+he+":"+me+" "+e;
              System.out.print(sdate);
              

            }
            
            
            String[] columnNames = {"ID","Date", "Client Name", "Department", "PCNo", "LoggedIn", "LoggedOut"};
            DefaultTableModel model=new javax.swing.table.DefaultTableModel();
            model.setColumnIdentifiers(columnNames);
            jTable1.setModel(model);
            jTable1.getTableHeader().setReorderingAllowed(false);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane1.setViewportView(jTable1);
            
            
            ResultSet res=db.searchClients(sdate,edate,deptd);
   
            
            try {
                while(res.next()){
                    int idd=res.getInt("id");
                    String name=res.getString("name");
                    String department=res.getString("department");
                    String pcno=res.getString("pcno");
                    String empid=res.getString("empid");
                    String LoggedIn=res.getString("login_datetime");
                    String LoggedOut=res.getString("logout_datetime");
                    
                    String datee=db.dateformat(LoggedIn,"yyyy-MM-dd HH:mm:ss","dd-MM-yyyy");
                    //                System.out.println(LoggedOut);
                    String LoggedIntime=db.dateformat(LoggedIn,"yyyy-MM-dd HH:mm:ss","hh:mm aa");
                    //                System.out.println(LoggedOut);
                    String LoggedOuttime="";
                    if(LoggedOut!=null){
                        LoggedOuttime=db.dateformat(LoggedOut,"yyyy-MM-dd HH:mm:ss","hh:mm aa");
                    }
                    //                System.out.println(LoggedOut);
                    
                    model.addRow(new Object[]{empid,datee,name,department,pcno,LoggedIntime,LoggedOuttime});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Clients.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportActionPerformed
        // TODO add your handling code here:
         if(evt.getSource() == export){
           JFileChooser fchoose = new JFileChooser();
           int option = fchoose.showSaveDialog(Clients.this);
           if(option == JFileChooser.APPROVE_OPTION){
             String name = fchoose.getSelectedFile().getName(); 
             String path = fchoose.getSelectedFile().getParentFile().getPath();
             String file = path + "/" + name + ".xls"; 
             System.out.println(file);
             export(jTable1, new File(file));
           }
         }
    }//GEN-LAST:event_exportActionPerformed

    private void dayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayActionPerformed

    private void minstartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minstartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minstartActionPerformed

    private void hrstartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrstartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hrstartActionPerformed

    private void day3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_day3ActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startActionPerformed

    private void hrendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hrendActionPerformed

    private void minendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minendActionPerformed

    private void endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endActionPerformed

    private void export1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_export1ActionPerformed
String[] columnNames = {"ID","Date", "Client Name", "Department", "PCNo", "LoggedIn", "LoggedOut"};
            DefaultTableModel model=new javax.swing.table.DefaultTableModel();
            model.setColumnIdentifiers(columnNames);
            jTable1.setModel(model);
            jTable1.getTableHeader().setReorderingAllowed(false);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane1.setViewportView(jTable1);
            
            
            ResultSet res=db.RefreshClients();
            try {
                while(res.next()){
                    int idd=res.getInt("id");
                    String name=res.getString("name");
                    String department=res.getString("department");
                    String pcno=res.getString("pcno");
                    String empid=res.getString("empid");
                    String LoggedIn=res.getString("login_datetime");
                    String LoggedOut=res.getString("logout_datetime");
                    
                    String datee=db.dateformat(LoggedIn,"yyyy-MM-dd HH:mm:ss","dd-MM-yyyy");
                    //                System.out.println(LoggedOut);
                    String LoggedIntime=db.dateformat(LoggedIn,"yyyy-MM-dd HH:mm:ss","hh:mm aa");
                    //                System.out.println(LoggedOut);
                    String LoggedOuttime="";
                    if(LoggedOut!=null){
                        LoggedOuttime=db.dateformat(LoggedOut,"yyyy-MM-dd HH:mm:ss","hh:mm aa");
                    }
                    //                System.out.println(LoggedOut);
                    
                    model.addRow(new Object[]{empid,datee,name,department,pcno,LoggedIntime,LoggedOuttime});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Clients.class.getName()).log(Level.SEVERE, null, ex);
            }       
       
        
    }//GEN-LAST:event_export1ActionPerformed

    private void deptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptActionPerformed
    
    
    
    
    public void export(JTable table, File file){
    try
    {
      TableModel m = table.getModel();
      FileWriter fw = new FileWriter(file);
      for(int i = 0; i < m.getColumnCount(); i++){
        fw.write(m.getColumnName(i) + "\t");
      }
      fw.write("\n");
      for(int i=0; i < m.getRowCount(); i++) {
        for(int j=0; j < m.getColumnCount(); j++) {
          fw.write(m.getValueAt(i,j).toString()+"\t");
        }
        fw.write("\n");
      }
      fw.close();
    }
    catch(IOException e){ System.out.println(e); }
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> day;
    private javax.swing.JComboBox<String> day3;
    private javax.swing.JComboBox<String> dept;
    private javax.swing.JComboBox<String> end;
    private javax.swing.JButton export;
    private javax.swing.JButton export1;
    private javax.swing.JComboBox<String> hrend;
    private javax.swing.JComboBox<String> hrstart;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> minend;
    private javax.swing.JComboBox<String> minstart;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JComboBox<String> start;
    private javax.swing.JComboBox<String> year;
    // End of variables declaration//GEN-END:variables
}
